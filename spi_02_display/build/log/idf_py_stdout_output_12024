[1/10] Performing build step for 'bootloader'
[1/1] C:\Windows\system32\cmd.exe /C "cd /D C:\Users\redda\Documents\GitHub\ESP32\spi_02_display\build\bootloader\esp-idf\esptool_py && C:\Users\redda\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/redda/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/redda/Documents/GitHub/ESP32/spi_02_display/build/bootloader/bootloader.bin"
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/display/display.c.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable main.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/redda/Documents/GitHub/ESP32/spi_02_display/build/main.bin
[9/10] C:\Windows\system32\cmd.exe /C "cd /D C:\Users\redda\Documents\GitHub\ESP32\spi_02_display\build\esp-idf\esptool_py && C:\Users\redda\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/redda/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/redda/Documents/GitHub/ESP32/spi_02_display/build/partition_table/partition-table.bin C:/Users/redda/Documents/GitHub/ESP32/spi_02_display/build/main.bin"
main.bin binary size 0x31910 bytes. Smallest app partition is 0x100000 bytes. 0xce6f0 bytes (81%) free.
[9/10] C:\Windows\system32\cmd.exe /C "cd /D C:\Users\redda\esp\v5.4.1\esp-idf\components\esptool_py && C:\Users\redda\.espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Users/redda/esp/v5.4.1/esp-idf -D SERIAL_TOOL=C:/Users/redda/.espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Users/redda/esp/v5.4.1/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/redda/Documents/GitHub/ESP32/spi_02_display/build -P C:/Users/redda/esp/v5.4.1/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM8 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM8
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: f0:24:f9:0c:e7:40
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00041fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16377...
Writing at 0x00001000... (100 %)
Wrote 25984 bytes (16377 compressed) at 0x00001000 in 0.8 seconds (effective 263.0 kbit/s)...
Hash of data verified.
Compressed 203024 bytes to 110820...
Writing at 0x00010000... (14 %)
Writing at 0x0001cad4... (28 %)
Writing at 0x00022ba8... (42 %)
Writing at 0x000289b1... (57 %)
Writing at 0x0002f4fe... (71 %)
Writing at 0x00036b2d... (85 %)
Writing at 0x0003cb79... (100 %)
Wrote 203024 bytes (110820 compressed) at 0x00010000 in 2.9 seconds (effective 566.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 480.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
